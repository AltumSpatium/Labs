// Квадратичные сортировки. Реализации сортировок вставками, пузырьковой, выбором. (2 на выбор)

/*
Сортировка вставками (англ. Insertion sort) — алгоритм сортировки, 
в котором элементы входной последовательности просматриваются по одному, 
и каждый новый поступивший элемент размещается в подходящее место 
среди ранее упорядоченных элементов. 
Вычислительная сложность - O(n^2). 

На вход процедуре сортировки подаётся массив A[1..n],\ 
состоящий из элементов последовательности A[1], A[2], ..., A[n], 
которые требуется отсортировать. 
A.length — размер исходного массива. 
Для сортировки не требуется привлечения дополнительной памяти, 
кроме постоянной величины для одного элемента, 
так как выполняется перестановка в пределах массива. 

Худшее время 
О(n2) сравнений, обменов 
Лучшее время 
O(n) сравнений, O(1) обмен 
Среднее время 
О(n2) сравнений, обменов 
Затраты памяти 
О(n) всего, O(1) 


Плюсы: 

эффективен на небольших наборах данных, 
на наборах данных до десятков элементов может оказаться лучшим; 

эффективен на наборах данных, которые уже частично отсортированы; 

это устойчивый алгоритм сортировки 
(не меняет порядок элементов, которые уже отсортированы); 

может сортировать список по мере его получения; 

использует O(1) временной памяти, включая стек. 

может работать значительно быстрее за счёт бинарного поиска 

Минусы: 

Очень высокая вычислительная сложность алгоритма O(n^2) 
(при использовании стандартного алгоритма). 

Сортиро́вка пузырько́м (англ. bubble sort) — простой алгоритм сортировки. 
Для понимания и реализации этот алгоритм — простейший, 
но эффективен он лишь для небольших массивов. 
Сложность алгоритма: O(n^2). 

Алгоритм состоит из повторяющихся проходов по сортируемому массиву. 
За каждый проход элементы последовательно сравниваются попарно и, 
если порядок в паре неверный, 
выполняется обмен элементов. 
Проходы по массиву повторяются N-1 раз или до тех пор, 
пока на очередном проходе не окажется, что обмены больше не нужны, 
что означает — массив отсортирован. 
При каждом проходе алгоритма по внутреннему циклу, 
очередной наибольший элемент массива ставится на своё место в конце 
массива рядом с предыдущим «наибольшим элементом», 
а наименьший элемент перемещается на одну позицию 
к началу массива («всплывает» до нужной позиции, 
как пузырёк в воде, отсюда и название алгоритма). 

Худшее время 
O(n^2) 
Лучшее время 
O(n) 
Среднее время 
O(n^2) 
Затраты памяти 
O(1)
*/

// Реализация:

/* Сортировка вставками */
void insertion_sort(int *a, int length)
{
	for (int j = 2; j < length; j++)
	{
		int key = a[j]; 
		int i = j - 1;
		while (i > 0 && a[i] > key)
		{
			a[i + 1] = a[i];
			i = i - 1;
		}
		a[i + 1] = key;
	}
}

/* Сортировка пузырьком */
void bubble_sort(int *a, int length) 
{ 
	for (int i = 0; i < length - 1; i++)
	{
		for (int j = i + 1; j < length; j++)
		{
			if (a[i] > a[j])
			{
				int temp = a[i];
				a[i] = a[j];
				a[j] = temp;
			}
		}
	}
}