// Тернарный поиск с помощью золотого сечения. Реализация

/*
Поиск с помощью золотого сечения (англ. Golden section search) — это улучшение наивной
реализации троичного поиска, служащего для нахождения минимума/максимума функции.
При простом троичном поиске на каждой итерации функция вычисляется в двух точках.
Метод же золотого сечения требует вычисления лишь в одной точке (за исключением
первой итерации).

Рассмотрим одну итерацию алгоритма троичного поиска. Попробуем подобрать такое
разбиение отрезка на три части, чтобы на следующей итерации одна из точек
нового разбиения совпала с одной из точек текущего разбиения. Тогда в следующий
раз не придется считать функцию в двух точках, так как в одной она уже
была посчитана.
*/

// Реализация:

#include <math.h>

/* Вещественная функция */
double f(double x)
{
	return x;
}

/* Поиск с помощью золотого сечения */
double goldenSectionSearch(double l, double r, double e)
{
	double phi = (1 + sqrt(5)) / 2;
	double resphi = 2 - phi;
	double x1 = l + resphi * (r - l), x2 = r - resphi * (r - l);
	double f1 = f(x1), f2 = f(x2);

	do
	{
		if (f1 < f2)
		{
			r = x2;
			x2 = x1;
			f2 = f1;
			x1 = l + resphi * (r - l);
			f1 = f(x1);
		}
		else
		{
			l = x2;
			x1 = x2;
			x2 = r - resphi * (r - l);
			f2 = f(x2);
		}
	} while (abs(r - l) > e)

	return (x1 + x2) / 2;
}