// Линейная сортировка. Реализация любой на выбор

/*
Сортировка выбором (Selection sort) — алгоритм сортировки. Может быть как устойчивый, так и неустойчивый.
На массиве из n элементов имеет время выполнения в худшем, среднем и лучшем случае Θ(n^2), предполагая что сравнения
делаются за постоянное время.

Шаги алгоритма:
1. находим номер минимального значения в текущем списке
2. производим обмен этого значения со значением первой неотсортированной позиции (обмен не нужен, если минимальный элемент
уже находится на данной позиции)
3. теперь сортируем хвост списка, исключив из рассмотрения уже отсортированные элементы
Для реализации устойчивости алгоритма необходимо в пункте 2 минимальный элемент непосредственно вставлять
в первую неотсортированную позицию, не меняя порядок остальных элементов.

Эта сортировка обычно применяется для массивов, не содержащих повторяющихся элементов
Идея линейной сортировки по возрастанию заключается в том, чтобы, последовательно просматривая весь массив, отыскать
наименьшее число и поменять его местами с первым элементом. Затем просматриваются элементы массива, начиная со
второго, снова находится наименьший, который меняется местами со вторым и т. д.
Всего потребуется n-1 раз выполнить эту последовательность действий. В процессе сортировки будет увеличиваться
отсортированная часть массива, а несортированная, уменьшаться.
*/

// Реализация:

/* Сортировка выбором, за O(n^2) */
void selection_sort(int *a, int n)
{
	for (int i = 0; i < n - 1; i++)
	{
		min = i;
		for (int j = i + 1; j < n; j++)
		{
			if (a[j] < a[min])
				min = j;
		}

		if (min != i)
		{
			swap(a[i], a[min]);
		}
	}
}